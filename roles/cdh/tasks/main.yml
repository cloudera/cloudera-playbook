---

- include_vars: ../../../group_vars/cdh_servers.yml
- include_vars: ../../../group_vars/db_server.yml

# Check whether cluster already exists
# https://cloudera.github.io/cm_api/apidocs/v13/path__clusters.html
- name: Check whether cluster exists
  uri:
    url: "{{ cm_api_url }}/clusters/{{ cluster_display_name }}"
    method: GET
    status_code: 200,404
    force_basic_auth: yes
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    return_content: yes
  register: clusters_resp

- set_fact:
    cluster_exists: "{{ 'True' if clusters_resp.status == 200 else 'False' }}"

- debug:
    msg: "Cluster '{{ cluster_display_name }}' exists - {{ cluster_exists }}"
    verbosity: 1

- name: Discover product versions from parcel manifests
  uri:
    url: "{{ item }}/manifest.json"
    status_code: 200
    body_format: json
    return_content: yes
  register: manifests
  with_items: 
    - "{{ scm_parcel_repositories }}"

- set_fact:
    scm_products: "{{ manifests.results | map(attribute='json') | list | json_query('[*].parcels[0].parcelName') | map('regex_replace', '-[a-z0-9]+.parcel$','') | list }}"

# https://www.cloudera.com/documentation/enterprise/latest/topics/install_cluster_template.html
- set_fact:
    cluster_template_json: "{{ lookup('template', 'base.j2', convert_data=False) }}"
  when: not cluster_exists

- debug:
    var: cluster_template_json
    verbosity: 1

# https://cloudera.github.io/cm_api/apidocs/v13/path__cm_importClusterTemplate.html
- name: Import cluster template
  uri:
    url: "{{ cm_api_url }}/cm/importClusterTemplate?addRepositories=true"
    method: POST
    body_format: json
    body: "{{ cluster_template_json|to_json }}"
    status_code: 200
    force_basic_auth: yes
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    return_content: yes
  register: template_resp
  when: not cluster_exists

- debug:
    var: template_resp
    verbosity: 1
  when: not cluster_exists

- set_fact:
    command_id: "{{ template_resp.json.id }}"
  when: not cluster_exists

- debug:
    msg: "Login to Cloudera Manager to monitor import progress - http://{{ hostvars[scm_hostname]['inventory_hostname'] }}:{{ scm_port }}/cmf/command/{{ command_id }}/details"
    verbosity: 1
  when: not cluster_exists

- name: Wait for import cluster template command to complete
  uri: 
    url: "{{ cm_api_url }}/commands/{{ command_id }}"
    body_format: json
    force_basic_auth: yes
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    return_content: yes
  register: result
  until: not result.json.active
  retries: 10
  delay: 60
  when: not cluster_exists

- debug:
    var: result
  when: not cluster_exists

- name: Restart Cloudera Management Service
  uri:
    url: "{{ cm_api_url }}/cm/service/commands/restart"
    method: POST
    status_code: 200
    force_basic_auth: yes
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    return_content: yes
  register: start_resp
  failed_when: "'startTime' not in start_resp.content"
  when: not cluster_exists
