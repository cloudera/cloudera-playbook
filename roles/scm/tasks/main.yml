---

- include_vars: ../../../group_vars/db_server.yml

- name: Install the Cloudera Manager Server Packages
  yum: name={{ item }} state=installed
  with_items:
    - cloudera-manager-daemons
    - cloudera-manager-server
    - cloudera-manager-agent

- name: Prepare Cloudera Manager Server External Database
  command: /usr/share/cmf/schema/scm_prepare_database.sh
             -f
             --host {{ hostvars[db_hostname][hostname_var] }}
             mysql {{ databases.scm.name }} {{ databases.scm.user }} {{ databases.scm.pass }}
  changed_when: False

- name: Start the Cloudera Manager Server
  service: name={{ item }} state=restarted enabled=yes
  notify:
    - wait cloudera-scm-server
  with_items:
    - cloudera-scm-server
    - cloudera-scm-agent

# Trigger handler to wait for SCM to startup
- meta: flush_handlers

- name: Get Cloudera Manager API version
  uri:
    url: http://{{ hostvars[scm_hostname][hostname_var] }}:{{ scm_port }}/api/version
    method: GET
    status_code: 200
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    force_basic_auth: yes
    return_content: yes
  register: result

# Set base CM API URL
- set_fact: cm_api_url="http://{{ hostvars[scm_hostname][hostname_var] }}:{{ scm_port }}/api/{{ result.content }}"
- debug: var=cm_api_url

# Install Cloudera Manager Python API
- include: api.yml

# Retrieve auto-generated host IDs from SCM
- name: Get SCM hostIds for inventory hosts
  action: scm_hosts
  register: scm_hosts_result

- set_fact: scm_host_ids="{{ scm_hosts_result.host_ids }}"
- debug: var=scm_host_ids

- set_fact: scm_host_names="{{ scm_hosts_result.host_names }}"
- debug: var=scm_host_names

- include: license.yml
- include: scm.yml
- include: cms.yml
